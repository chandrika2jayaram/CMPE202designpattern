import model.LibMember;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.List;

import model.LibMember;

public class MemberController {
	
	/*public static void main(String[] args)
		{
			String filename = "time.ser";
			LibMember member1 = new LibMember("001-12345", "Sam", "Jim", "California", "408-408-4080", "sam@gmail.com");
			LibMember member2 = new LibMember("001-12355", "Ally", "Jackson", "California", "408-428-4080", "ally@gmail.com");
			
		
		
		FileOutputStream fos = null;
		ObjectOutputStream out = null;
		
		try {
			fos = new FileOutputStream(filename);
			out = new ObjectOutputStream(fos);
			out.writeObject(member1);
			out.writeObject(member2);
			out.close();
		}		
			catch (Exception e)
			{
				e.printStackTrace();
			}
			
			FileInputStream fis = null;
			ObjectInputStream in  = null;
			try{
				fis = new FileInputStream(filename);
				in = new ObjectInputStream(fis);
				member1 = (LibMember) in.readObject();
				member2 = (LibMember) in.readObject();
				in.close();
			} catch (Exception e)
			{
				e.printStackTrace();
			}
			System.out.println(member1);
			
			System.out.println(member2);
			
			
			
			
		} 
		}
		*/

 public boolean create(LibMember member) {
	 String filename = "member.ser";
	 LibMember member1 = new LibMember("001-12345", "Sam", "Jim", "California", "408-408-4080", "sam@gmail.com");
		LibMember member2 = new LibMember("001-12355", "Ally", "Jackson", "California", "408-428-4080", "ally@gmail.com");
        try{
            FileOutputStream fout = new FileOutputStream(filename);
            ObjectOutputStream out = new ObjectOutputStream(fout);
            out.writeObject(member);
            out.close();
        }catch(Exception e){
            e.printStackTrace();
            return false;
        }
        
        FileInputStream fis = null;
		ObjectInputStream in  = null;
		try{
			fis = new FileInputStream(filename);
			in = new ObjectInputStream(fis);
			member1 = (LibMember) in.readObject();
			member2 = (LibMember) in.readObject();
			in.close();
		} catch (Exception e)
		{
			e.printStackTrace();
		}
        return true;
    }

    public boolean create(List<LibMember> t) {
        return false;  //To change body of implemented methods use File | Settings | File Templates.
    }

    public boolean update(LibMember member) {
        return false;  
    }

    public boolean delete(LibMember member) {
        return false;  
    }

    public LibMember find(Integer id) {
        return null;  
    }

    public List<LibMember> findAll() {
        return null; 
    }
}
 





